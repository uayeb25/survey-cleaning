'lavaan','semTools','survey',
'tidyverse','rdrop2','RCurl','matrixcalc',
'reshape2','graphics','mvoutlier','psych','heplots')
inst.pack <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
inst.pack(packages)
library(rJava)
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
library(XLConnect)
install.packages("rJava")
install.packages("XLConnect")
library(rJava)
library(XLConnect)
source('C:/Users/ucaballero/Desktop/SurveyAnalysis.R')
source('C:/Users/ucaballero/Desktop/SurveyAnalysis.R')
View(do.sem)
library(rJava)
source('C:/Users/ucaballero/Desktop/SurveyAnalysis.R')
30000/20
30000/20/8
30000/20/8/24.8
11*4
11*4*5*3
30000/20/8/24.8+
x
30000*14
(30000*14)/12
35000/20/8/24.8
12*4*4*3
12*4*5*3
720*24.8
13*4*5*3
14*4*5*3
15*4*5*3
2928/3
clr
2928*24.8
16*15*14
choose(3,1)
choose(3,2)
choose(3,3)
2758/24.8
20*8
20*8*24.5
(20*8*24.5)/33
119-90
29*33
90/8
20*24.8
1+1
a <- 1
?mtcars
library(dplyr)
library(ggplot2)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
survey <- read.csv("survey_cleanned_v2.csv",sep = ",", header = T)
summary(survey)
numeric_corr <- survey %>% select(disenio,progra,bd,analisis,servidores)
numeric_corr
boxplot(numeric_corr$disenio)
boxplot(numeric_corr$progra)
boxplot(numeric_corr$bd)
boxplot(numeric_corr$analisis)
boxplot(numeric_corr$servidores)
boxplot(numeric_corr$disenio)
boxplot(numeric_corr$progra)
boxplot(numeric_corr$bd)
boxplot(numeric_corr$analisis)
boxplot(numeric_corr$servidores)
cor(numeric_corr, method = c("pearson", "kendall", "spearman"))
install.packages("corrplot")
library(corrplot)
corrplot(numeric_corr, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
x <- cor(numeric_corr, method = c("pearson", "kendall", "spearman"))
corrplot(x, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
prcomp(numeric_corr,scale=F)
library(factoextra)
install.packages("factoextra")
library(factoextra)
res <- prcomp(numeric_corr,scale=F)
fviz_eig(res)
fviz_pca_ind(res,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res.pca,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_ind(res,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
repel = TRUE     # Avoid text overlapping
)
fviz_pca_biplot(res, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
res
res$x
k2 <- kmeans(res$x, centers = 2, nstart = 25)
k2
res$x
res$x[,1:2]
k2 <- kmeans(res$x[,1:2], centers = 2, nstart = 25)
fviz_cluster(k2, data = res$x[,1:2])
k2
k2$cluster
k2 <- kmeans(res$x[,1:2], centers = 3, nstart = 25)
fviz_cluster(k2, data = res$x[,1:2])
k2$cluster
cbind(survey,k2$cluster)
k2 <- kmeans(res$x[,1:2], centers = 2, nstart = 25)
fviz_cluster(k2, data = res$x[,1:2])
k2$cluster
cbind(survey,k2$cluster)
numeric_corr <- survey %>% select(disenio,progra,bd,analisis,servidores)
str(numeric_corr)
boxplot(numeric_corr$disenio)
boxplot(numeric_corr$progra)
boxplot(numeric_corr$bd)
boxplot(numeric_corr$analisis)
boxplot(numeric_corr$servidores)
boxplot(numeric_corr$disenio)
boxplot(numeric_corr$progra)
boxplot(numeric_corr$bd)
boxplot(numeric_corr$analisis)
numeric_corr %>% filter(disenio == 4)
boxplot(numeric_corr$bd)
boxplot(numeric_corr$analisis)
boxplot(numeric_corr$servidores)
numeric_corr %>% filter(bd == 4)
numeric_corr %>% filter(analisis == 4)
x <- cor(numeric_corr, method = c("pearson", "kendall", "spearman"))
x
corrplot(x, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
res <- prcomp(numeric_corr,scale=F)
fviz_eig(res)
fviz_pca_ind(res,
col.ind = "cos2", # Color by the quality of representation
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
fviz_pca_var(res,
col.var = "contrib", # Color by contributions to the PC
repel = TRUE     # Avoid text overlapping
)
fviz_pca_biplot(res, repel = TRUE,
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
res$x[,1:2]
k2 <- kmeans(res$x[,1:2], centers = 2, nstart = 25)
fviz_cluster(k2, data = res$x[,1:2])
k2$cluster
cbind(survey,k2$cluster)
library(dplyr)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/Survey analysis/")
survey <- read.csv("survey.csv",header = T,sep = ",", encoding = "UTF-8")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
survey <- read.csv("survey.csv",header = T,sep = ",", encoding = "UTF-8")
notas <- read.csv("notas.csv")
head(notas)
notas <- read.csv("notas.csv", dec = ".", sep = ";")
head(notas)
notas <- read.csv("notas.csv", dec = ".", sep = ";")
head(notas)
head(survey)
inner_join(survey,notas, by=c("Numero.de.cuenta"="cuenta"))
inner_join(survey,notas, by=c("Numero.de.cuenta"="cuenta")) %>% nrow
survey <- inner_join(survey,notas, by=c("Numero.de.cuenta"="cuenta"))
my.names <- names(survey)
columnas_a_tratar <- my.names[!(my.names %in% c("Numero.de.cuenta"))]
df <- data.frame( columna.name = columnas_a_tratar)
write.csv(df,"column_names.csv",row.names = FALSE)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
library(dplyr)
survey <- read.csv("survey.csv",header = T,sep = ",", encoding = "UTF-8")
column_names <- read.csv("column_names_tratados.csv",header = T,sep = ";")
notas <- read.csv("notas.csv", dec = ".", sep = ";")
survey <- inner_join(survey,notas, by=c("Numero.de.cuenta"="cuenta"))
!(names(survey) %in% c("Numero.de.cuenta"))
survey <- survey[,!(names(survey) %in% c("Numero.de.cuenta"))]
str(survey)
summary(survey)
survey
head(survey,2)
tail(survey,2)
column_names <- column_names[ !(column_names$translation == "") , !(names(column_names) %in% c("X")) ]
column_names$translation <- as.character(column_names$translation)
names(survey) <- column_names$translation
head(survey)
write.csv(survey,"survey_cleaned.csv",row.names = F)
survey <- read.csv("survey_cleaned.csv", sep = ",", header = T)
df_perc <- as.data.frame(prop.table(table(survey$jornada)))
df_perc <- df_perc %>% arrange(-Freq)
df_perc
boxplot(df_perc$Freq)
hist(df_perc$Freq)
qqnorm(df_perc$Freq)
df_perc[df_perc$Var1 %in% c("Mañana, Tarde, Noche","Mañana, Noche") , "categoria"] <- "Jornada Completa"
df_perc[df_perc$Var1 %in% c("Tarde","Noche") , "categoria"] <- "Unica Jornada"
df_perc[df_perc$Var1 %in% c("Tarde, Noche") , "categoria"] <- "Doble Jornada"
df_perc <- df_perc %>% select(Var1,categoria)
survey <- left_join(survey,df_perc,by=c("jornada"="Var1"))
survey <- survey[,!(names(survey) %in% c("jornada"))]
names(survey)[length(names(survey))] <- "jornada"
prop.table(table(survey$jornada))
summary(survey)
na.summay <- c()
for( myname in names(survey)){
print(myname)
s <- as.data.frame(prop.table(table(is.na(survey[,myname]))))
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
na.summay <- rbind(na.summay,df_temp)
}
na.summay %>% arrange(-na.percentage) %>% filter(na.percentage > 0)
# survey$anios_beca remplazar por ceros, por que son estudiantes sin scholarship
survey[is.na(survey$anios_beca),"anios_beca"] <- 0
x <- survey %>% filter(!is.na(numero_periodos_matriculado))
media <- median(x$numero_periodos_matriculado)
survey %>% filter(is.na(numero_periodos_matriculado))
survey <- survey %>% filter( !(Timestamp == "3/28/2020 15:47:06") )
table(is.na(survey$numero_periodos_matriculado))
survey[ is.na(survey$numero_periodos_matriculado) , "numero_periodos_matriculado" ] <- media
table(is.na(survey$numero_periodos_matriculado))
table(survey$otras_opciones_estudio)
level_one <- c()
si_no <- c()
for (myname in names(survey)) {
unique_values <- unique(survey[,myname])
if( length(unique_values) == 1 ){
level_one <- c(level_one,myname)
}else{
validations <- sum(unique(survey[,myname]) %in% c("No","Sí",""))
if( validations == 3 ){
si_no <- c(si_no,myname)
}
}
}
#### Eliminando las variables con un unico nivel
survey <- survey[, !(names(survey) %in% level_one) ]
for (col in si_no) {
survey[ survey[,col] == "" ,col] <- "No"
}
##muy poca informacion
survey <- survey[, !(names(survey) %in% c("reprobado_mas_de_dos","beca")) ]
write.csv(survey,"survey_cleanned_v2.csv",row.names = F)
survey <- read.csv("survey_cleanned_v2.csv",sep = ",", header = T)
prop.table(table(survey$indice,survey$trabaja),1)
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
chisq.test(table(survey$indice,survey$trabaja))
copy_survey <- survey
survey <- copy_survey
summary(survey)
prop.table(table(survey$estudia_grupo))
str(survey$estudia_grupo)
summary(survey$horas_dedicadas_clase)
##Esto es meramente descriptivo
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
#Comprobamos normalidad
shapiro.test(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
survey[ survey$horas_dedicadas_clase > 17 , "horas_dedicadas_clase"] <- median(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
shapiro.test(survey$horas_dedicadas_clase)
Si_grupo <- survey %>% filter(estudia_grupo == "Sí") %>% select(horas_dedicadas_clase)
no_grupo <- survey %>% filter(estudia_grupo == "No") %>% select(horas_dedicadas_clase)
#SI GRUPO
boxplot(Si_grupo$horas_dedicadas_clase)
qqnorm(Si_grupo$horas_dedicadas_clase)
qqline(Si_grupo$horas_dedicadas_clase)
shapiro.test(Si_grupo$horas_dedicadas_clase)
#NO GRUPO
boxplot(no_grupo$horas_dedicadas_clase)
qqnorm(no_grupo$horas_dedicadas_clase)
qqline(no_grupo$horas_dedicadas_clase)
shapiro.test(no_grupo$horas_dedicadas_clase)
var.test(no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase)
t.test( no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase, # dos muestras
alternative = "two.sided", # contraste bilateral
paired = FALSE, # muestras independientes
var.equal = TRUE ) # se supone homocedasticidad
#Interpretación:
survey <- read.csv("survey_cleanned_v2.csv",sep = ",", header = T)
summary(survey)
boxplot(survey$nota)
hist(survey$nota)
survey$mal_rendimiento <- "0"
survey[ survey$nota <= 4 ,]
survey$mal_rendimiento <- "0"
survey[ survey$nota <= 4 ,"mal_rendimiento"] <- "1"
prop.table(table(survey$mal_rendimiento)
prop.table(table(survey$mal_rendimiento))
prop.table(table(survey$mal_rendimiento))
names(survey)
k2$cluster
cbind(survey,k2$cluster)
survey <- cbind(survey,k2$cluster)
names(survey)
names(survey)[length(names(survey))] <- "perfil"
names(survey)
features <- c(
"genero",
"internet_permanente",
"foraneo",
"indice",
"excelencia_academica",
"clases_matriculadas",
"uv",
"jornada",
"perfil",
"expositor",
"mal_rendimiento"
)
set <- survey[, names(survey) %in% features ]
str(set)
set$mal_rendimiento <- as.factor(set$mal_rendimiento)
glm(mal_rendimiento ~ ., data = set, family = "binomial")
library(caret)
model <- glm(mal_rendimiento ~ ., data = set, family = "binomial")
varImp(model)
importances <- varImp(model)
importances %>% arrange(Overall)
importances %>% arrange(-Overall)
importances <- importances %>% arrange(-Overall)
importances
importances <- varImp(model)
importances$col <- row.names(importances)
importances <- importances %>% arrange(-Overall)
importances
model
library(ggplot2)
set
ggplot(set) +
aes(x = excelencia_academica, fill = factor(mal_rendimiento)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = excelencia_academica, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
importances
ggplot(set) +
aes(x = indice, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_line(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_histogram(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
features <- c(
"genero",
"internet_permanente",
"foraneo",
"indice",
"clases_matriculadas",
"uv",
"jornada",
"perfil",
"expositor",
"mal_rendimiento"
)
set <- survey[, names(survey) %in% features ]
set$mal_rendimiento <- as.factor(set$mal_rendimiento)
model <- glm(mal_rendimiento ~ ., data = set, family = "binomial")
importances <- varImp(model)
importances$col <- row.names(importances)
importances <- importances %>% arrange(-Overall)
importances
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = genero, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
features <- c(
"internet_permanente",
"foraneo",
"indice",
"clases_matriculadas",
"uv",
"jornada",
"perfil",
"expositor",
"mal_rendimiento"
)
set <- survey[, names(survey) %in% features ]
set$mal_rendimiento <- as.factor(set$mal_rendimiento)
model <- glm(mal_rendimiento ~ ., data = set, family = "binomial")
importances <- varImp(model)
importances$col <- row.names(importances)
importances <- importances %>% arrange(-Overall)
importances
ggplot(set) +
aes(x = genero, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = jornada, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(set) +
aes(x = jornada, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
prop.table(table(survey$mal_rendimiento))
model <- glm(mal_rendimiento ~ ., data = set, family = "binomial")
model
importances <- varImp(model)
importances
importances <- importances %>% arrange(-Overall)
importances
importances$col <- row.names(importances)
importances <- varImp(model)
importances$col <- row.names(importances)
importances <- importances %>% arrange(-Overall)
importances
ggplot(set) +
aes(x = indece, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
ggplot(set) +
aes(x = indice, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "block") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "block") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
ggplot(set) +
aes(x = uv, fill = factor(mal_rendimiento)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45)) +
scale_fill_manual(values=c("#999999","#E69F00"))
