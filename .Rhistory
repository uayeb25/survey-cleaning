print(myname)
}
for( myname in names(survey)){
print(myname)
print(head(survey[,myname]))
}
c(1,NA,2)
is.na(c(1,NA,2))
for( myname in names(survey)){
print(myname)
print(is.na(survey[,myname]))
}
for( myname in names(survey)){
print(myname)
table(is.na(survey[,myname]))
}
print(table(is.na(survey[,myname])))
for( myname in names(survey)){
print(myname)
print(table(is.na(survey[,myname])))
}
for( myname in names(survey)){
print(myname)
print(prop.table(table(is.na(survey[,myname]))))
}
s <- as.data.frame(prop.table(table(is.na(survey[,myname]))))
s
na.summay <- c()
s %>% filter(Var1 == TRUE)
s %>% filter(Var1 == FALSE)
s %>% filter(Var1 == TRUE) %>% select(Freq)
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
operacion$Freq
lenght(operacion$Freq)
length(operacion$Freq)
operacion <- s %>% filter(Var1 == FALSE) %>% select(Freq)
length(operacion$Freq)
operacion$Freq
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
df_temp
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
df_temp
summary(survey)
na.summay <- c()
for( myname in names(survey)){
print(myname)
s <- as.data.frame(prop.table(table(is.na(survey[,myname]))))
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
na.summay <- rbind(na.summay,df_temp)
}
na.summay
na.summay %>% arrange(na.percentage)
na.summay %>% arrange(-na.percentage)
na.summay %>% arrange(-na.percentage) %>% filter(na.percentage > 0)
survey$anios_beca
# survey$anios_beca remplazar por ceros, por que son estudiantes sin scholarship
survey[is.na(survey$anios_beca),"anios_beca"] <- 0
survey$anios_beca
survey %>% filter(is.na(numero_periodos_matriculado))
survey %>% filter(is.na(numero_periodos_matriculado)) %>% distinct()
media <- median(survey$numero_periodos_matriculado)
media
survey %>% filter(!is.na(numero_periodos_matriculado)) %>% median()
survey %>% filter(!is.na(numero_periodos_matriculado)) %>% median
survey %>% filter(!is.na(numero_periodos_matriculado))
x <- survey %>% filter(!is.na(numero_periodos_matriculado))
median(x$numero_periodos_matriculado)
media <- median(x$numero_periodos_matriculado)
survey %>% filter(is.na(numero_periodos_matriculado))
survey %>% filter( Timestamp == "3/28/2020 15:47:06" )
survey %>% filter( !(Timestamp == "3/28/2020 15:47:06") )
survey <- survey %>% filter( !(Timestamp == "3/28/2020 15:47:06") )
table(is.na(survey$numero_periodos_matriculado))
survey[ is.na(survey$numero_periodos_matriculado) , "numero_periodos_matriculado" ]
survey[ is.na(survey$numero_periodos_matriculado) , "numero_periodos_matriculado" ] <- media
table(is.na(survey$numero_periodos_matriculado))
summary(survey)
table(survey$otras_opciones_estudio)
mynames
myname
names_df <- names(survey)
names_df
for (mynames in names_df) {
}
for (mynames in names_df) {
print(names_df)
}
for (mynames in names_df) {
print(mynames)
}
table( survey[,mynames] )
ncol(table( survey[,mynames] ))
nrow(table( survey[,mynames] ))
solo_un_nivel <- c()
solo_un_nivel <- c()
for (myname in names_df) {
if( nrow(table( survey[,myname] )) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}
}
solo_un_nivel
tbl <- table( survey[,myname] )
df_tmp <- as.data.frame(tbl)
summary(suervey)
summary(survey)
df_tmp %>% filter(Var1 %in% c("No","Sí") )
df_tmp %>% filter(Var1 %in% c("No","Sí") ) %>% nrow
solo_un_nivel <- c()
si_no <- c()
for (myname in names_df) {
tbl <- table( survey[,myname] )
if( nrow(tbl) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}else{
df_tmp <- as.data.frame(tbl)
count_validation <- df_tmp %>% filter(Var1 %in% c("No","Sí") ) %>% nrow
if(count_validation > 2){
si_no <- c(si_no, myname)
}
}
}
si_no
solo_un_nivel
solo_un_nivel <- c()
si_no <- c()
for (myname in names_df) {
tbl <- table( survey[,myname] )
if( nrow(tbl) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}else{
df_tmp <- as.data.frame(tbl)
count_validation <- df_tmp %>% filter(Var1 %in% c("No","Sí") ) %>% nrow
print(count_validation)
if(count_validation > 2){
si_no <- c(si_no, myname)
}
}
}
survey$ejemplos_a_seguir
table(survey$ejemplos_a_seguir)
unique(survey$ejemplos_a_seguir)
lenght(unique(survey$ejemplos_a_seguir))
length(unique(survey$ejemplos_a_seguir))
table(survey$ejemplos_a_seguir,  useNA = T)
table(survey$ejemplos_a_seguir,  useNA)
c("No","Si") %in% c("No","Si")
c("No","Si","") %in% c("No","Si")
sum(c("No","Si","") %in% c("No","Si"))
solo_un_nivel <- c()
si_no <- c()
for (myname in names_df) {
vct <- unique( survey[,myname] )
if( length(vct) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}else{
df_tmp <- as.data.frame(tbl)
count_validation <- length(vct)
is_YN <- sum(c("No","Si","") %in% c("No","Si"))
if(count_validation == 3 & is_YN == 2 ){
si_no <- c(si_no, myname)
}
}
}
si_no
survey$edad
unique(survey$edad)
solo_un_nivel <- c()
si_no <- c()
for (myname in names_df) {
vct <- unique( survey[,myname] )
if( length(vct) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}else{
df_tmp <- as.data.frame(tbl)
count_validation <- length(vct)
is_YN <- sum(vct %in% c("No","Si"))
if(count_validation == 3 & is_YN == 2 ){
si_no <- c(si_no, myname)
}
}
}
is_YN
si_no
vct
vct %in% c("No","Si")
survey$ejemplos_a_seguir %in% c("No","Si")
unique(survey$ejemplos_a_seguir) %in% c("No","Si")
solo_un_nivel
summary(survey)
unique(survey$ejemplos_a_seguir) %in% c("No","Si")
unique(survey$ejemplos_a_seguir) %in% c("No","Sí")
solo_un_nivel <- c()
si_no <- c()
for (myname in names_df) {
vct <- unique( survey[,myname] )
if( length(vct) == 1 ){
solo_un_nivel <- c(solo_un_nivel,myname)
}else{
df_tmp <- as.data.frame(tbl)
count_validation <- length(vct)
is_YN <- sum(vct %in% c("No","Sí"))
if(count_validation == 3 & is_YN == 2 ){
si_no <- c(si_no, myname)
}
}
}
si_no
solo_un_nivel
summary(survey)
names(survey)
unique(survey[,myname])
level_one <- c()
for (myname in names(survey)) {
unique_values <- unique(survey[,myname])
if( length(unique_values) == 1 ){
level_one <- c(level_one,myname)
}
}
level_one
c("x","y","z") %in% c("No","Sí","")
unique(survey$ejemplos_a_seguir) %in% c("No","Sí","")
unique(survey$ejemplos_a_seguir)
unique(survey$ejemplos_a_seguir) %in% c("No","Sí","")
(unique(survey$ejemplos_a_seguir) %in% c("No","Sí","")) == c(T,T,T)
sum(unique(survey$ejemplos_a_seguir) %in% c("No","Sí",""))
level_one <- c()
si_no <- c()
for (myname in names(survey)) {
unique_values <- unique(survey[,myname])
if( length(unique_values) == 1 ){
level_one <- c(level_one,myname)
}else{
validations <- sum(unique(survey[,myname]) %in% c("No","Sí",""))
if( validations == 3 ){
si_no <- c(si_no,myname)
}
}
}
si_no
survey[, si_no[1] ]
table(survey[, si_no[1] ])
survey <- survey[, !(names(survey) %in% level_one) ]
length(names(survey))
survey[ survey[,col] == "" ,col]
for (col in si_no) {
survey[ survey[,col] == "" ,col]
}
survey[ survey[,col] == "" ,col]
length(survey[ survey[,col] == "" ,col])
for (col in si_no) {
survey[ survey[,col] == "" ,col] <- "No"
}
level_one <- c()
si_no <- c()
for (myname in names(survey)) {
unique_values <- unique(survey[,myname])
if( length(unique_values) == 1 ){
level_one <- c(level_one,myname)
}else{
validations <- sum(unique(survey[,myname]) %in% c("No","Sí",""))
if( validations == 3 ){
si_no <- c(si_no,myname)
}
}
}
level_one
si_no
summary(survey)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/Survey analysis/")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
survey <- read.csv("survey.csv",header = T,sep = ",", encoding = "UTF-8")
column_names <- read.csv("column_names_tratados.csv",header = T,sep = ";")
!(names(survey) %in% c("Numero.de.cuenta"))
survey <- survey[,!(names(survey) %in% c("Numero.de.cuenta"))]
str(survey)
summary(survey)
survey
head(survey,2)
tail(survey,2)
column_names <- column_names[ !(column_names$translation == "") , !(names(column_names) %in% c("X")) ]
column_names$translation <- as.character(column_names$translation)
names(survey) <- column_names$translation
head(survey)
write.csv(survey,"survey_cleaned.csv",row.names = F)
library(dplyr)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
survey <- read.csv("survey_cleaned.csv", sep = ",", header = T)
df_perc <- as.data.frame(prop.table(table(survey$jornada)))
df_perc <- df_perc %>% arrange(-Freq)
df_perc
boxplot(df_perc$Freq)
hist(df_perc$Freq)
qqnorm(df_perc$Freq)
df_perc[df_perc$Var1 %in% c("Mañana, Tarde, Noche","Mañana, Noche") , "categoria"] <- "Jornada Completa"
df_perc[df_perc$Var1 %in% c("Tarde","Noche") , "categoria"] <- "Unica Jornada"
df_perc[df_perc$Var1 %in% c("Tarde, Noche") , "categoria"] <- "Doble Jornada"
df_perc <- df_perc %>% select(Var1,categoria)
survey <- left_join(survey,df_perc,by=c("jornada"="Var1"))
survey <- survey[,!(names(survey) %in% c("jornada"))]
names(survey)[length(names(survey))] <- "jornada"
prop.table(table(survey$jornada))
summary(survey)
na.summay <- c()
for( myname in names(survey)){
print(myname)
s <- as.data.frame(prop.table(table(is.na(survey[,myname]))))
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
na.summay <- rbind(na.summay,df_temp)
}
na.summay %>% arrange(-na.percentage) %>% filter(na.percentage > 0)
# survey$anios_beca remplazar por ceros, por que son estudiantes sin scholarship
survey[is.na(survey$anios_beca),"anios_beca"] <- 0
x <- survey %>% filter(!is.na(numero_periodos_matriculado))
media <- median(x$numero_periodos_matriculado)
survey %>% filter(is.na(numero_periodos_matriculado))
survey <- survey %>% filter( !(Timestamp == "3/28/2020 15:47:06") )
table(is.na(survey$numero_periodos_matriculado))
survey[ is.na(survey$numero_periodos_matriculado) , "numero_periodos_matriculado" ] <- media
table(is.na(survey$numero_periodos_matriculado))
table(survey$otras_opciones_estudio)
level_one <- c()
si_no <- c()
for (myname in names(survey)) {
unique_values <- unique(survey[,myname])
if( length(unique_values) == 1 ){
level_one <- c(level_one,myname)
}else{
validations <- sum(unique(survey[,myname]) %in% c("No","Sí",""))
if( validations == 3 ){
si_no <- c(si_no,myname)
}
}
}
#### Eliminando las variables con un unico nivel
survey <- survey[, !(names(survey) %in% level_one) ]
for (col in si_no) {
survey[ survey[,col] == "" ,col] <- "No"
}
summary(survey)
survey <- survey[, !(names(survey) %in% c("reprobado_mas_de_dos","beca")) ]
summary(survey)
table(survey$indice)
prop.table(table(survey$indice))
as.data.frame(prop.table(table(survey$indice)))
df_indice <- as.data.frame(prop.table(table(survey$indice)))
df_indice %>% arrange(-Freq)
write.csv(survey,"survey_cleanned_v2.csv",row.names = F)
library(dplyr)
setwd("/")
setwd("Users/ucaballero/Desktop/repositories/SEMINARIO/Survey analysis/")
survey <- read.csv("survey_cleanned_v2.csv",sep = ",", header = T)
table(survey$buena_conexion,survey$trabaja)
prop.table(table(survey$buena_conexion,survey$trabaja))
prop.table(table(survey$buena_conexion,survey$trabaja),1)
prop.table(table(survey$indice,survey$trabaja),1)
library(ggplot2)
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "fill")
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "stack")
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
chisq.test((table(survey$indice,survey$trabaja))
chisq.test((table(survey$indice,survey$trabaja)))
chisq.test(table(survey$indice,survey$trabaja))
summary(survey)
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_histogram(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_histogram(position = "stack") +
theme(axis.text.x = element_text(angle = 45)) +
stat_bin(bins = 30)
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_histogram(position = "stack") +
theme(axis.text.x = element_text(angle = 45)) +
stat_bin(bins = 15)
ggplot(survey) +
aes(x = numero_periodos_matriculado, fill = factor(trabaja)) +
geom_histogram(position = "stack") +
theme(axis.text.x = element_text(angle = 45)) +
stat_bin(bins = 10)
table(survey$indice,survey$trabaja)
prop.table(table(survey$indice,survey$trabaja),1)
prop.table(table(survey$indice,survey$trabaja),2)
prop.table(table(survey$indice,survey$trabaja),1)
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "fill") +
theme(axis.text.x = element_text(angle = 45))
chisq.test(table(survey$indice,survey$trabaja))
ggplot(survey) +
aes(x = indice, fill = factor(trabaja)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 45))
8960/4
summary(survey)
table(survey$estudia_grupo)
summary(survey$horas_dedicadas_clase)
str(survey$estudia_grupo)
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
shapiro.test(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
copy_survey <- survey
survey[ survey$horas_dedicadas_clase > 17 ,]
median(survey$horas_dedicadas_clase)
survey[ survey$horas_dedicadas_clase > 17 , "horas_dedicadas_clase"] <- median(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
shapiro.test(survey$horas_dedicadas_clase)
summary(survey$horas_dedicadas_clase)
t.test( dfmedicamentos$Month0,
mu = 4.25,
alternative = "two.sided" )
t.test( survey$horas_dedicadas_clase,
mu = 4.25,
alternative = "two.sided" )
survey %>% filter(estudia_grupo == "Sí")
survey %>% filter(estudia_grupo == "Sí") %>% select(horas_dedicadas_clase)
Si_grupo <- survey %>% filter(estudia_grupo == "Sí") %>% select(horas_dedicadas_clase)
no_grupo <- survey %>% filter(estudia_grupo == "No") %>% select(horas_dedicadas_clase)
#SI GRUPO
boxplot(Si_grupo$horas_dedicadas_clase)
qqnorm(Si_grupo$horas_dedicadas_clase)
qqline(Si_grupo$horas_dedicadas_clase)
shapiro.test(Si_grupo$horas_dedicadas_clase)
#NO GRUPO
boxplot(no_grupo$horas_dedicadas_clase)
qqnorm(no_grupo$horas_dedicadas_clase)
qqline(no_grupo$horas_dedicadas_clase)
shapiro.test(no_grupo$horas_dedicadas_clase)
#NO GRUPO
boxplot(no_grupo$horas_dedicadas_clase)
var.test(no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase)
t.test( no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase, # dos muestras
alternative = "two.sided", # contraste bilateral
paired = FALSE, # muestras independientes
var.equal = TRUE ) # se supone homocedasticidad
survey <- copy_survey
str(survey$estudia_grupo)
table(survey$estudia_grupo)
prop.table(table(survey$estudia_grupo))
summary(survey$horas_dedicadas_clase)
##Esto es meramente descriptivo
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
#Comprobamos normalidad
shapiro.test(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
median(survey$horas_dedicadas_clase)
survey[ survey$horas_dedicadas_clase > 17 , "horas_dedicadas_clase"]
survey[ survey$horas_dedicadas_clase > 17 , "horas_dedicadas_clase"] <- median(survey$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
shapiro.test(survey$horas_dedicadas_clase)
#SI GRUPO
boxplot(Si_grupo$horas_dedicadas_clase)
qqnorm(Si_grupo$horas_dedicadas_clase)
qqline(Si_grupo$horas_dedicadas_clase)
qqnorm(survey$horas_dedicadas_clase)
qqline(survey$horas_dedicadas_clase)
shapiro.test(Si_grupo$horas_dedicadas_clase)
#NO GRUPO
boxplot(no_grupo$horas_dedicadas_clase)
qqnorm(no_grupo$horas_dedicadas_clase)
qqline(no_grupo$horas_dedicadas_clase)
shapiro.test(no_grupo$horas_dedicadas_clase)
boxplot(survey$horas_dedicadas_clase)
var.test(no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase)
t.test( no_grupo$horas_dedicadas_clase,Si_grupo$horas_dedicadas_clase, # dos muestras
alternative = "two.sided", # contraste bilateral
paired = FALSE, # muestras independientes
var.equal = TRUE ) # se supone homocedasticidad
